// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpexShowcase.Data;

#nullable disable

namespace backendopexlaunchpad.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250630023947_AddDescriptionImageAndTagsToProductSeed")]
    partial class AddDescriptionImageAndTagsToProductSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OpexShowcase.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Unlock AI-powered...",
                            ImageUrl = "/assets/products1.jpg",
                            Name = "Opex AI",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Digitize your invoicing...",
                            ImageUrl = "/assets/products2.jpg",
                            Name = "Opex eInvoice",
                            Price = 0m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Simplify digital stamping...",
                            ImageUrl = "/assets/products3.jpg",
                            Name = "Opex eMeterai",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("OpexShowcase.Models.ProductTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Tag = "Scalable Cloud Infrastructure"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 1,
                            Tag = "Expert Support"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 1,
                            Tag = "Custom Workflow"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 2,
                            Tag = "Secure & Compliant"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 2,
                            Tag = "Real-time Sync"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 2,
                            Tag = "Easy Integration"
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 3,
                            Tag = "Official Certified Stamping"
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 3,
                            Tag = "Bulk Upload Ready"
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 3,
                            Tag = "Simple Interface"
                        });
                });

            modelBuilder.Entity("OpexShowcase.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OpexShowcase.Models.UserProduct", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserProducts");
                });

            modelBuilder.Entity("OpexShowcase.Models.ProductTag", b =>
                {
                    b.HasOne("OpexShowcase.Models.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OpexShowcase.Models.UserProduct", b =>
                {
                    b.HasOne("OpexShowcase.Models.Product", "Product")
                        .WithMany("UserProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpexShowcase.Models.User", "User")
                        .WithMany("UserProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OpexShowcase.Models.Product", b =>
                {
                    b.Navigation("ProductTags");

                    b.Navigation("UserProducts");
                });

            modelBuilder.Entity("OpexShowcase.Models.User", b =>
                {
                    b.Navigation("UserProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
